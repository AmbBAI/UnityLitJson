<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Build/Release/LitJson</name>
    </assembly>
    <members>
        <member name="T:LitJson.JsonType">
            <summary>
            This enum contains the possible types a JSON value can have.
            </summary>
        </member>
        <member name="T:LitJson.IJsonWrapper">
            <summary>
            Interface that represents a type capable of handling all kinds of JSON data.
            This is mainly used when mapping objects through JsonMapper, and it's implemented by JsonData.
            </summary>
        </member>
        <member name="T:LitJson.JsonInclude">
            <summary>
            Attribute to be placed on non-public fields or properties to include them in serialization.
            </summary>
        </member>
        <member name="T:LitJson.JsonData">
            <summary>
            Generic type to hold JSON data (objects, arrays, and so on).
            This isthe default type returned by JsonMapper.ToObject().
            </summary>
        </member>
        <member name="T:LitJson.JsonException">
            <summary>
            Base class throwed by LitJSON when a parsing error occurs.
            </summary>
        </member>
        <member name="T:LitJson.JsonMapper">
            <summary>
            JSON to .Net object and object to JSON conversions.
            </summary>
        </member>
        <member name="T:LitJson.JsonMockWrapper">
            <summary>
            Mock object implementing IJsonWrapper, to facilitate actions like skipping data more efficiently.
            </summary>
        </member>
        <member name="T:LitJson.JsonReader">
            <summary>
            Stream-like access to JSON text.
            </summary>
        </member>
        <member name="T:LitJson.JsonWriter">
            <summary>
            Stream-like facility to output JSON text.
            </summary>
        </member>
        <member name="T:LitJson.Lexer">
            <summary>
            JSON lexer implementation based on a finite state machine.
            </summary>
        </member>
        <member name="T:LitJson.ParserToken">
            <summary>
            Internal representation of the tokens used by the lexer and the parser.
            </summary>
        </member>
    </members>
</doc>
